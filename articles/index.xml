<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Articles on Badasstronaut Solutions</title>
    <link>https://badasstronaut.github.io/articles/</link>
    <description>Recent content in Articles on Badasstronaut Solutions</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 02 Mar 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://badasstronaut.github.io/articles/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Rethinking Dependence on Dependencies</title>
      <link>https://badasstronaut.github.io/articles/2019-03-02-rethinking-dependence/</link>
      <pubDate>Sat, 02 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://badasstronaut.github.io/articles/2019-03-02-rethinking-dependence/</guid>
      <description>This article was published on medium.
Rethinking Dependence on Dependencies Time spent programming is time spent learning; regardless of one’s opinion on coding projects for job applications, these sorts of projects are good for experimenting.
Have you ever gone to start a project — even a smaller project — and run into immediate decision fatigue? Front end! Should I use React or try Vue? Do I want to use a CSS preprocessor; should I take the opportunity to flaunt some Redux; should I play with something like Pagedraw?</description>
    </item>
    
    <item>
      <title>A practical guide to avoid unhandled promise rejection DeprecationWarnings in Node</title>
      <link>https://badasstronaut.github.io/articles/2018-06-07-unhandled-promise/</link>
      <pubDate>Thu, 07 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://badasstronaut.github.io/articles/2018-06-07-unhandled-promise/</guid>
      <description>This article was published on medium.
Even experienced developers sometimes miss subtle, but important, points regarding promises and unhandled rejections.
Let’s say you’re working on a RESTful (ish?) API. You’ve just spent the last few hours writing a whole bunch of business logic, you have controllers calling services, and services calling repositories or data models, getting all asynchronous up in here. Everything’s humming along perfectly, until suddenly your endpoint doesn’t respond and times out.</description>
    </item>
    
  </channel>
</rss>